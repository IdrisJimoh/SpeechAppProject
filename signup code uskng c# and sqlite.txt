Here's an example C# code that uses SQLite to implement a simple signup functionality for a user by storing their username and password in the database.


using System.Data.SQLite;

// Function to add new user to database
void Signup(string username, string password)
{
    // Open database connection
    SQLiteConnection conn = new SQLiteConnection("Data Source=mydb.db;Version=3;");
    conn.Open();

    // Check if user already exists
    SQLiteCommand checkCmd = new SQLiteCommand("SELECT COUNT(*) FROM users WHERE username = @username", conn);
    checkCmd.Parameters.AddWithValue("@username", username);
    int userCount = Convert.ToInt32(checkCmd.ExecuteScalar());

    if (userCount > 0)
    {
        // User already exists
        // Do something to handle this case, such as displaying an error message
    }
    else
    {
        // User doesn't exist, so add them to the database
        SQLiteCommand insertCmd = new SQLiteCommand("INSERT INTO users (username, password) VALUES (@username, @password)", conn);
        insertCmd.Parameters.AddWithValue("@username", username);
        insertCmd.Parameters.AddWithValue("@password", password);
        insertCmd.ExecuteNonQuery();

        // Do something to indicate that signup was successful, such as redirecting to a new page or displaying a message
    }

    // Close database connection
    conn.Close();
}




This function takes two arguments: username and password, which are the username and password entered by the user during signup. It first checks if a user with the same username already exists in the database. If not, it inserts the new user's information into the database. If the user already exists, you would need to handle this case in some way, such as displaying an error message to the user.

Note that this code assumes that you have already created a SQLite database called mydb.db with a table called users that has columns for username and password.